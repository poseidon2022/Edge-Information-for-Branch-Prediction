Control-flow features for function: __cxx_global_var_init
  call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit): [in_loop: 0, dist_to_branch: 0]
  %1 = call i32 @__cxa_atexit(ptr @_ZNSt8ios_base4InitD1Ev, ptr @_ZStL8__ioinit, ptr @__dso_handle) #3: [in_loop: 0, dist_to_branch: 0]
  ret void: [in_loop: 0, dist_to_branch: 0]
Control-flow features for function: _Z12linearSearchPiii
  %4 = alloca i1, align 1: [in_loop: 0, dist_to_branch: 9]
  %5 = alloca ptr, align 8: [in_loop: 0, dist_to_branch: 8]
  %6 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 7]
  %7 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 6]
  %8 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 5]
  store ptr %0, ptr %5, align 8: [in_loop: 0, dist_to_branch: 4]
  Depends on:   %5 = alloca ptr, align 8, 
  store i32 %1, ptr %6, align 4: [in_loop: 0, dist_to_branch: 3]
  Depends on:   %6 = alloca i32, align 4, 
  store i32 %2, ptr %7, align 4: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %7 = alloca i32, align 4, 
  store i32 0, ptr %8, align 4: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %8 = alloca i32, align 4, 
  br label %9: [in_loop: 0, dist_to_branch: 0]
  %10 = load i32, ptr %8, align 4: [in_loop: 1, dist_to_branch: 3]
  Depends on:   %8 = alloca i32, align 4, 
  %11 = load i32, ptr %6, align 4: [in_loop: 1, dist_to_branch: 2]
  Depends on:   %6 = alloca i32, align 4, 
  %12 = icmp slt i32 %10, %11: [in_loop: 1, dist_to_branch: 1]
  Depends on:   %10 = load i32, ptr %8, align 4,   %11 = load i32, ptr %6, align 4, 
BranchID: 0   br i1 %12, label %13, label %26: [in_loop: 1, dist_to_branch: 0]
  Depends on:   %12 = icmp slt i32 %10, %11, 
  %14 = load ptr, ptr %5, align 8: [in_loop: 1, dist_to_branch: 7]
  Depends on:   %5 = alloca ptr, align 8, 
  %15 = load i32, ptr %8, align 4: [in_loop: 1, dist_to_branch: 6]
  Depends on:   %8 = alloca i32, align 4, 
  %16 = sext i32 %15 to i64: [in_loop: 1, dist_to_branch: 5]
  Depends on:   %15 = load i32, ptr %8, align 4, 
  %17 = getelementptr inbounds i32, ptr %14, i64 %16: [in_loop: 1, dist_to_branch: 4]
  Depends on:   %14 = load ptr, ptr %5, align 8,   %16 = sext i32 %15 to i64, 
  %18 = load i32, ptr %17, align 4: [in_loop: 1, dist_to_branch: 3]
  Depends on:   %17 = getelementptr inbounds i32, ptr %14, i64 %16, 
  %19 = load i32, ptr %7, align 4: [in_loop: 1, dist_to_branch: 2]
  Depends on:   %7 = alloca i32, align 4, 
  %20 = icmp eq i32 %18, %19: [in_loop: 1, dist_to_branch: 1]
  Depends on:   %18 = load i32, ptr %17, align 4,   %19 = load i32, ptr %7, align 4, 
BranchID: 1   br i1 %20, label %21, label %22: [in_loop: 1, dist_to_branch: 0]
  Depends on:   %20 = icmp eq i32 %18, %19, 
  store i1 true, ptr %4, align 1: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %4 = alloca i1, align 1, 
  br label %27: [in_loop: 0, dist_to_branch: 0]
  br label %23: [in_loop: 1, dist_to_branch: 0]
  %24 = load i32, ptr %8, align 4: [in_loop: 1, dist_to_branch: 3]
  Depends on:   %8 = alloca i32, align 4, 
  %25 = add nsw i32 %24, 1: [in_loop: 1, dist_to_branch: 2]
  Depends on:   %24 = load i32, ptr %8, align 4, 
  store i32 %25, ptr %8, align 4: [in_loop: 1, dist_to_branch: 1]
  Depends on:   %8 = alloca i32, align 4,   %25 = add nsw i32 %24, 1, 
  br label %9, !llvm.loop !6: [in_loop: 1, dist_to_branch: 0]
  store i1 false, ptr %4, align 1: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %4 = alloca i1, align 1, 
  br label %27: [in_loop: 0, dist_to_branch: 0]
  %28 = load i1, ptr %4, align 1: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %4 = alloca i1, align 1, 
  ret i1 %28: [in_loop: 0, dist_to_branch: 0]
  Depends on:   %28 = load i1, ptr %4, align 1, 
Control-flow features for function: main
  %1 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 5]
  %2 = alloca [5 x i32], align 16: [in_loop: 0, dist_to_branch: 4]
  %3 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 3]
  %4 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 2]
  store i32 0, ptr %1, align 4: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %1 = alloca i32, align 4, 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2, ptr align 16 @__const.main.arr, i64 20, i1 false): [in_loop: 0, dist_to_branch: 0]
  Depends on:   %2 = alloca [5 x i32], align 16, 
  store i32 5, ptr %3, align 4: [in_loop: 0, dist_to_branch: 5]
  Depends on:   %3 = alloca i32, align 4, 
  store i32 7, ptr %4, align 4: [in_loop: 0, dist_to_branch: 4]
  Depends on:   %4 = alloca i32, align 4, 
  %5 = getelementptr inbounds [5 x i32], ptr %2, i64 0, i64 0: [in_loop: 0, dist_to_branch: 3]
  Depends on:   %2 = alloca [5 x i32], align 16, 
  %6 = load i32, ptr %3, align 4: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %3 = alloca i32, align 4, 
  %7 = load i32, ptr %4, align 4: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %4 = alloca i32, align 4, 
  %8 = call noundef zeroext i1 @_Z12linearSearchPiii(ptr noundef %5, i32 noundef %6, i32 noundef %7): [in_loop: 0, dist_to_branch: 0]
  Depends on:   %5 = getelementptr inbounds [5 x i32], ptr %2, i64 0, i64 0,   %6 = load i32, ptr %3, align 4,   %7 = load i32, ptr %4, align 4, 
  %9 = zext i1 %8 to i64: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %8 = call noundef zeroext i1 @_Z12linearSearchPiii(ptr noundef %5, i32 noundef %6, i32 noundef %7), 
  %10 = select i1 %8, ptr @.str, ptr @.str.1: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %8 = call noundef zeroext i1 @_Z12linearSearchPiii(ptr noundef %5, i32 noundef %6, i32 noundef %7), 
  %11 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef %10): [in_loop: 0, dist_to_branch: 0]
  Depends on:   %10 = select i1 %8, ptr @.str, ptr @.str.1, 
  %12 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEPFRSoS_E(ptr noundef nonnull align 8 dereferenceable(8) %11, ptr noundef @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_): [in_loop: 0, dist_to_branch: 0]
  Depends on:   %11 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef %10), 
  ret i32 0: [in_loop: 0, dist_to_branch: 0]
Control-flow features for function: _GLOBAL__sub_I_linear_search.cpp
  call void @__cxx_global_var_init(): [in_loop: 0, dist_to_branch: 0]
  ret void: [in_loop: 0, dist_to_branch: 0]
