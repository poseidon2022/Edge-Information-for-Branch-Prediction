Control-flow features for function: __cxx_global_var_init
  call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit): [in_loop: 0, dist_to_branch: 0]
  %1 = call i32 @__cxa_atexit(ptr @_ZNSt8ios_base4InitD1Ev, ptr @_ZStL8__ioinit, ptr @__dso_handle) #3: [in_loop: 0, dist_to_branch: 0]
  ret void: [in_loop: 0, dist_to_branch: 0]
Control-flow features for function: _Z9partitionPiii
  %4 = alloca ptr, align 8: [in_loop: 0, dist_to_branch: 20]
  %5 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 19]
  %6 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 18]
  %7 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 17]
  %8 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 16]
  %9 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 15]
  store ptr %0, ptr %4, align 8: [in_loop: 0, dist_to_branch: 14]
  Depends on:   %4 = alloca ptr, align 8, 
  store i32 %1, ptr %5, align 4: [in_loop: 0, dist_to_branch: 13]
  Depends on:   %5 = alloca i32, align 4, 
  store i32 %2, ptr %6, align 4: [in_loop: 0, dist_to_branch: 12]
  Depends on:   %6 = alloca i32, align 4, 
  %10 = load ptr, ptr %4, align 8: [in_loop: 0, dist_to_branch: 11]
  Depends on:   %4 = alloca ptr, align 8, 
  %11 = load i32, ptr %6, align 4: [in_loop: 0, dist_to_branch: 10]
  Depends on:   %6 = alloca i32, align 4, 
  %12 = sext i32 %11 to i64: [in_loop: 0, dist_to_branch: 9]
  Depends on:   %11 = load i32, ptr %6, align 4, 
  %13 = getelementptr inbounds i32, ptr %10, i64 %12: [in_loop: 0, dist_to_branch: 8]
  Depends on:   %10 = load ptr, ptr %4, align 8,   %12 = sext i32 %11 to i64, 
  %14 = load i32, ptr %13, align 4: [in_loop: 0, dist_to_branch: 7]
  Depends on:   %13 = getelementptr inbounds i32, ptr %10, i64 %12, 
  store i32 %14, ptr %7, align 4: [in_loop: 0, dist_to_branch: 6]
  Depends on:   %7 = alloca i32, align 4,   %14 = load i32, ptr %13, align 4, 
  %15 = load i32, ptr %5, align 4: [in_loop: 0, dist_to_branch: 5]
  Depends on:   %5 = alloca i32, align 4, 
  %16 = sub nsw i32 %15, 1: [in_loop: 0, dist_to_branch: 4]
  Depends on:   %15 = load i32, ptr %5, align 4, 
  store i32 %16, ptr %8, align 4: [in_loop: 0, dist_to_branch: 3]
  Depends on:   %8 = alloca i32, align 4,   %16 = sub nsw i32 %15, 1, 
  %17 = load i32, ptr %5, align 4: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %5 = alloca i32, align 4, 
  store i32 %17, ptr %9, align 4: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %9 = alloca i32, align 4,   %17 = load i32, ptr %5, align 4, 
  br label %18: [in_loop: 0, dist_to_branch: 0]
  %19 = load i32, ptr %9, align 4: [in_loop: 1, dist_to_branch: 3]
  Depends on:   %9 = alloca i32, align 4, 
  %20 = load i32, ptr %6, align 4: [in_loop: 1, dist_to_branch: 2]
  Depends on:   %6 = alloca i32, align 4, 
  %21 = icmp slt i32 %19, %20: [in_loop: 1, dist_to_branch: 1]
  Depends on:   %19 = load i32, ptr %9, align 4,   %20 = load i32, ptr %6, align 4, 
BranchID: 0   br i1 %21, label %22, label %44: [in_loop: 1, dist_to_branch: 0]
  Depends on:   %21 = icmp slt i32 %19, %20, 
  %23 = load ptr, ptr %4, align 8: [in_loop: 1, dist_to_branch: 7]
  Depends on:   %4 = alloca ptr, align 8, 
  %24 = load i32, ptr %9, align 4: [in_loop: 1, dist_to_branch: 6]
  Depends on:   %9 = alloca i32, align 4, 
  %25 = sext i32 %24 to i64: [in_loop: 1, dist_to_branch: 5]
  Depends on:   %24 = load i32, ptr %9, align 4, 
  %26 = getelementptr inbounds i32, ptr %23, i64 %25: [in_loop: 1, dist_to_branch: 4]
  Depends on:   %23 = load ptr, ptr %4, align 8,   %25 = sext i32 %24 to i64, 
  %27 = load i32, ptr %26, align 4: [in_loop: 1, dist_to_branch: 3]
  Depends on:   %26 = getelementptr inbounds i32, ptr %23, i64 %25, 
  %28 = load i32, ptr %7, align 4: [in_loop: 1, dist_to_branch: 2]
  Depends on:   %7 = alloca i32, align 4, 
  %29 = icmp slt i32 %27, %28: [in_loop: 1, dist_to_branch: 1]
  Depends on:   %27 = load i32, ptr %26, align 4,   %28 = load i32, ptr %7, align 4, 
BranchID: 1   br i1 %29, label %30, label %40: [in_loop: 1, dist_to_branch: 0]
  Depends on:   %29 = icmp slt i32 %27, %28, 
  %31 = load ptr, ptr %4, align 8: [in_loop: 1, dist_to_branch: 10]
  Depends on:   %4 = alloca ptr, align 8, 
  %32 = load i32, ptr %8, align 4: [in_loop: 1, dist_to_branch: 9]
  Depends on:   %8 = alloca i32, align 4, 
  %33 = add nsw i32 %32, 1: [in_loop: 1, dist_to_branch: 8]
  Depends on:   %32 = load i32, ptr %8, align 4, 
  store i32 %33, ptr %8, align 4: [in_loop: 1, dist_to_branch: 7]
  Depends on:   %8 = alloca i32, align 4,   %33 = add nsw i32 %32, 1, 
  %34 = sext i32 %33 to i64: [in_loop: 1, dist_to_branch: 6]
  Depends on:   %33 = add nsw i32 %32, 1, 
  %35 = getelementptr inbounds i32, ptr %31, i64 %34: [in_loop: 1, dist_to_branch: 5]
  Depends on:   %31 = load ptr, ptr %4, align 8,   %34 = sext i32 %33 to i64, 
  %36 = load ptr, ptr %4, align 8: [in_loop: 1, dist_to_branch: 4]
  Depends on:   %4 = alloca ptr, align 8, 
  %37 = load i32, ptr %9, align 4: [in_loop: 1, dist_to_branch: 3]
  Depends on:   %9 = alloca i32, align 4, 
  %38 = sext i32 %37 to i64: [in_loop: 1, dist_to_branch: 2]
  Depends on:   %37 = load i32, ptr %9, align 4, 
  %39 = getelementptr inbounds i32, ptr %36, i64 %38: [in_loop: 1, dist_to_branch: 1]
  Depends on:   %36 = load ptr, ptr %4, align 8,   %38 = sext i32 %37 to i64, 
  call void @_ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_(ptr noundef nonnull align 4 dereferenceable(4) %35, ptr noundef nonnull align 4 dereferenceable(4) %39) #3: [in_loop: 1, dist_to_branch: 0]
  Depends on:   %35 = getelementptr inbounds i32, ptr %31, i64 %34,   %39 = getelementptr inbounds i32, ptr %36, i64 %38, 
  br label %40: [in_loop: 1, dist_to_branch: 0]
  br label %41: [in_loop: 1, dist_to_branch: 0]
  %42 = load i32, ptr %9, align 4: [in_loop: 1, dist_to_branch: 3]
  Depends on:   %9 = alloca i32, align 4, 
  %43 = add nsw i32 %42, 1: [in_loop: 1, dist_to_branch: 2]
  Depends on:   %42 = load i32, ptr %9, align 4, 
  store i32 %43, ptr %9, align 4: [in_loop: 1, dist_to_branch: 1]
  Depends on:   %9 = alloca i32, align 4,   %43 = add nsw i32 %42, 1, 
  br label %18, !llvm.loop !6: [in_loop: 1, dist_to_branch: 0]
  %45 = load ptr, ptr %4, align 8: [in_loop: 0, dist_to_branch: 9]
  Depends on:   %4 = alloca ptr, align 8, 
  %46 = load i32, ptr %8, align 4: [in_loop: 0, dist_to_branch: 8]
  Depends on:   %8 = alloca i32, align 4, 
  %47 = add nsw i32 %46, 1: [in_loop: 0, dist_to_branch: 7]
  Depends on:   %46 = load i32, ptr %8, align 4, 
  %48 = sext i32 %47 to i64: [in_loop: 0, dist_to_branch: 6]
  Depends on:   %47 = add nsw i32 %46, 1, 
  %49 = getelementptr inbounds i32, ptr %45, i64 %48: [in_loop: 0, dist_to_branch: 5]
  Depends on:   %45 = load ptr, ptr %4, align 8,   %48 = sext i32 %47 to i64, 
  %50 = load ptr, ptr %4, align 8: [in_loop: 0, dist_to_branch: 4]
  Depends on:   %4 = alloca ptr, align 8, 
  %51 = load i32, ptr %6, align 4: [in_loop: 0, dist_to_branch: 3]
  Depends on:   %6 = alloca i32, align 4, 
  %52 = sext i32 %51 to i64: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %51 = load i32, ptr %6, align 4, 
  %53 = getelementptr inbounds i32, ptr %50, i64 %52: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %50 = load ptr, ptr %4, align 8,   %52 = sext i32 %51 to i64, 
  call void @_ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_(ptr noundef nonnull align 4 dereferenceable(4) %49, ptr noundef nonnull align 4 dereferenceable(4) %53) #3: [in_loop: 0, dist_to_branch: 0]
  Depends on:   %49 = getelementptr inbounds i32, ptr %45, i64 %48,   %53 = getelementptr inbounds i32, ptr %50, i64 %52, 
  %54 = load i32, ptr %8, align 4: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %8 = alloca i32, align 4, 
  %55 = add nsw i32 %54, 1: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %54 = load i32, ptr %8, align 4, 
  ret i32 %55: [in_loop: 0, dist_to_branch: 0]
  Depends on:   %55 = add nsw i32 %54, 1, 
Control-flow features for function: _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_
  %3 = alloca ptr, align 8: [in_loop: 0, dist_to_branch: 15]
  %4 = alloca ptr, align 8: [in_loop: 0, dist_to_branch: 14]
  %5 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 13]
  store ptr %0, ptr %3, align 8: [in_loop: 0, dist_to_branch: 12]
  Depends on:   %3 = alloca ptr, align 8, 
  store ptr %1, ptr %4, align 8: [in_loop: 0, dist_to_branch: 11]
  Depends on:   %4 = alloca ptr, align 8, 
  %6 = load ptr, ptr %3, align 8: [in_loop: 0, dist_to_branch: 10]
  Depends on:   %3 = alloca ptr, align 8, 
  %7 = load i32, ptr %6, align 4: [in_loop: 0, dist_to_branch: 9]
  Depends on:   %6 = load ptr, ptr %3, align 8, 
  store i32 %7, ptr %5, align 4: [in_loop: 0, dist_to_branch: 8]
  Depends on:   %5 = alloca i32, align 4,   %7 = load i32, ptr %6, align 4, 
  %8 = load ptr, ptr %4, align 8: [in_loop: 0, dist_to_branch: 7]
  Depends on:   %4 = alloca ptr, align 8, 
  %9 = load i32, ptr %8, align 4: [in_loop: 0, dist_to_branch: 6]
  Depends on:   %8 = load ptr, ptr %4, align 8, 
  %10 = load ptr, ptr %3, align 8: [in_loop: 0, dist_to_branch: 5]
  Depends on:   %3 = alloca ptr, align 8, 
  store i32 %9, ptr %10, align 4: [in_loop: 0, dist_to_branch: 4]
  Depends on:   %9 = load i32, ptr %8, align 4,   %10 = load ptr, ptr %3, align 8, 
  %11 = load i32, ptr %5, align 4: [in_loop: 0, dist_to_branch: 3]
  Depends on:   %5 = alloca i32, align 4, 
  %12 = load ptr, ptr %4, align 8: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %4 = alloca ptr, align 8, 
  store i32 %11, ptr %12, align 4: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %11 = load i32, ptr %5, align 4,   %12 = load ptr, ptr %4, align 8, 
  ret void: [in_loop: 0, dist_to_branch: 0]
Control-flow features for function: _Z9quickSortPiii
  %4 = alloca ptr, align 8: [in_loop: 0, dist_to_branch: 10]
  %5 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 9]
  %6 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 8]
  %7 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 7]
  store ptr %0, ptr %4, align 8: [in_loop: 0, dist_to_branch: 6]
  Depends on:   %4 = alloca ptr, align 8, 
  store i32 %1, ptr %5, align 4: [in_loop: 0, dist_to_branch: 5]
  Depends on:   %5 = alloca i32, align 4, 
  store i32 %2, ptr %6, align 4: [in_loop: 0, dist_to_branch: 4]
  Depends on:   %6 = alloca i32, align 4, 
  %8 = load i32, ptr %5, align 4: [in_loop: 0, dist_to_branch: 3]
  Depends on:   %5 = alloca i32, align 4, 
  %9 = load i32, ptr %6, align 4: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %6 = alloca i32, align 4, 
  %10 = icmp slt i32 %8, %9: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %8 = load i32, ptr %5, align 4,   %9 = load i32, ptr %6, align 4, 
BranchID: 2   br i1 %10, label %11, label %24: [in_loop: 0, dist_to_branch: 0]
  Depends on:   %10 = icmp slt i32 %8, %9, 
  %12 = load ptr, ptr %4, align 8: [in_loop: 0, dist_to_branch: 3]
  Depends on:   %4 = alloca ptr, align 8, 
  %13 = load i32, ptr %5, align 4: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %5 = alloca i32, align 4, 
  %14 = load i32, ptr %6, align 4: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %6 = alloca i32, align 4, 
  %15 = call noundef i32 @_Z9partitionPiii(ptr noundef %12, i32 noundef %13, i32 noundef %14): [in_loop: 0, dist_to_branch: 0]
  Depends on:   %12 = load ptr, ptr %4, align 8,   %13 = load i32, ptr %5, align 4,   %14 = load i32, ptr %6, align 4, 
  store i32 %15, ptr %7, align 4: [in_loop: 0, dist_to_branch: 5]
  Depends on:   %15 = call noundef i32 @_Z9partitionPiii(ptr noundef %12, i32 noundef %13, i32 noundef %14),   %7 = alloca i32, align 4, 
  %16 = load ptr, ptr %4, align 8: [in_loop: 0, dist_to_branch: 4]
  Depends on:   %4 = alloca ptr, align 8, 
  %17 = load i32, ptr %5, align 4: [in_loop: 0, dist_to_branch: 3]
  Depends on:   %5 = alloca i32, align 4, 
  %18 = load i32, ptr %7, align 4: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %7 = alloca i32, align 4, 
  %19 = sub nsw i32 %18, 1: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %18 = load i32, ptr %7, align 4, 
  call void @_Z9quickSortPiii(ptr noundef %16, i32 noundef %17, i32 noundef %19): [in_loop: 0, dist_to_branch: 0]
  Depends on:   %19 = sub nsw i32 %18, 1,   %16 = load ptr, ptr %4, align 8,   %17 = load i32, ptr %5, align 4, 
  %20 = load ptr, ptr %4, align 8: [in_loop: 0, dist_to_branch: 4]
  Depends on:   %4 = alloca ptr, align 8, 
  %21 = load i32, ptr %7, align 4: [in_loop: 0, dist_to_branch: 3]
  Depends on:   %7 = alloca i32, align 4, 
  %22 = add nsw i32 %21, 1: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %21 = load i32, ptr %7, align 4, 
  %23 = load i32, ptr %6, align 4: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %6 = alloca i32, align 4, 
  call void @_Z9quickSortPiii(ptr noundef %20, i32 noundef %22, i32 noundef %23): [in_loop: 0, dist_to_branch: 0]
  Depends on:   %20 = load ptr, ptr %4, align 8,   %22 = add nsw i32 %21, 1,   %23 = load i32, ptr %6, align 4, 
  br label %24: [in_loop: 0, dist_to_branch: 0]
  ret void: [in_loop: 0, dist_to_branch: 0]
Control-flow features for function: main
  %1 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 5]
  %2 = alloca [7 x i32], align 16: [in_loop: 0, dist_to_branch: 4]
  %3 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 3]
  %4 = alloca i32, align 4: [in_loop: 0, dist_to_branch: 2]
  store i32 0, ptr %1, align 4: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %1 = alloca i32, align 4, 
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2, ptr align 16 @__const.main.arr, i64 28, i1 false): [in_loop: 0, dist_to_branch: 0]
  Depends on:   %2 = alloca [7 x i32], align 16, 
  store i32 7, ptr %3, align 4: [in_loop: 0, dist_to_branch: 4]
  Depends on:   %3 = alloca i32, align 4, 
  %5 = getelementptr inbounds [7 x i32], ptr %2, i64 0, i64 0: [in_loop: 0, dist_to_branch: 3]
  Depends on:   %2 = alloca [7 x i32], align 16, 
  %6 = load i32, ptr %3, align 4: [in_loop: 0, dist_to_branch: 2]
  Depends on:   %3 = alloca i32, align 4, 
  %7 = sub nsw i32 %6, 1: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %6 = load i32, ptr %3, align 4, 
  call void @_Z9quickSortPiii(ptr noundef %5, i32 noundef 0, i32 noundef %7): [in_loop: 0, dist_to_branch: 0]
  Depends on:   %5 = getelementptr inbounds [7 x i32], ptr %2, i64 0, i64 0,   %7 = sub nsw i32 %6, 1, 
  store i32 0, ptr %4, align 4: [in_loop: 0, dist_to_branch: 1]
  Depends on:   %4 = alloca i32, align 4, 
  br label %8: [in_loop: 0, dist_to_branch: 0]
  %9 = load i32, ptr %4, align 4: [in_loop: 1, dist_to_branch: 3]
  Depends on:   %4 = alloca i32, align 4, 
  %10 = load i32, ptr %3, align 4: [in_loop: 1, dist_to_branch: 2]
  Depends on:   %3 = alloca i32, align 4, 
  %11 = icmp slt i32 %9, %10: [in_loop: 1, dist_to_branch: 1]
  Depends on:   %9 = load i32, ptr %4, align 4,   %10 = load i32, ptr %3, align 4, 
BranchID: 3   br i1 %11, label %12, label %22: [in_loop: 1, dist_to_branch: 0]
  Depends on:   %11 = icmp slt i32 %9, %10, 
  %13 = load i32, ptr %4, align 4: [in_loop: 1, dist_to_branch: 4]
  Depends on:   %4 = alloca i32, align 4, 
  %14 = sext i32 %13 to i64: [in_loop: 1, dist_to_branch: 3]
  Depends on:   %13 = load i32, ptr %4, align 4, 
  %15 = getelementptr inbounds [7 x i32], ptr %2, i64 0, i64 %14: [in_loop: 1, dist_to_branch: 2]
  Depends on:   %2 = alloca [7 x i32], align 16,   %14 = sext i32 %13 to i64, 
  %16 = load i32, ptr %15, align 4: [in_loop: 1, dist_to_branch: 1]
  Depends on:   %15 = getelementptr inbounds [7 x i32], ptr %2, i64 0, i64 %14, 
  %17 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef %16): [in_loop: 1, dist_to_branch: 0]
  Depends on:   %16 = load i32, ptr %15, align 4, 
  %18 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(ptr noundef nonnull align 8 dereferenceable(8) %17, ptr noundef @.str): [in_loop: 1, dist_to_branch: 0]
  Depends on:   %17 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEi(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef %16), 
  br label %19: [in_loop: 1, dist_to_branch: 0]
  %20 = load i32, ptr %4, align 4: [in_loop: 1, dist_to_branch: 3]
  Depends on:   %4 = alloca i32, align 4, 
  %21 = add nsw i32 %20, 1: [in_loop: 1, dist_to_branch: 2]
  Depends on:   %20 = load i32, ptr %4, align 4, 
  store i32 %21, ptr %4, align 4: [in_loop: 1, dist_to_branch: 1]
  Depends on:   %4 = alloca i32, align 4,   %21 = add nsw i32 %20, 1, 
  br label %8, !llvm.loop !6: [in_loop: 1, dist_to_branch: 0]
  %23 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNSolsEPFRSoS_E(ptr noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, ptr noundef @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_): [in_loop: 0, dist_to_branch: 0]
  ret i32 0: [in_loop: 0, dist_to_branch: 0]
Control-flow features for function: _GLOBAL__sub_I_quick_sort.cpp
  call void @__cxx_global_var_init(): [in_loop: 0, dist_to_branch: 0]
  ret void: [in_loop: 0, dist_to_branch: 0]
